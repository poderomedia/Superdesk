define('providers/google/tab', ['providers', 'providers/_utils', 'tmpl!livedesk>providers/google/post'],         function(providers, utils) {	providers.google = 	{		className: 'big-icon-google',	                tooltip: _('Google'),		init: function() 		{							require(['providers','providers/google'], function(providers){ providers.google.init(); });		},	    	timeline:         {            preData: $.noop,            init: $.noop,            save: $.noop,            edit: function()            {                $('.actions', this.el).removeClass('hide');            },            render: function(callback)            {                var self = this,                    feed = this.model.feed();                                try                {                    feed.Meta = JSON.parse(feed.Meta);                }                catch(e)                {                    eval('feed.Meta = '+feed.Meta);                }                if( feed.Meta.annotation ) feed.Meta.annotation = feed.Meta.annotation[0];                                $.tmpl('livedesk>providers/google/post', feed, function(e, o)                {                    self.setElement(o);                    $(self.el).off('click', '.btn.publish').on('click', '.btn.publish', function()                    {                        var data =                         {                            Content: $('.google-full-content .result-text', self.el).html(),                            Meta: JSON.stringify( $.extend( feed.Meta,                             {                                annotation: [$('.google-full-content .annotation:eq(0)', self.el).html(),                                             $('.google-full-content .annotation:eq(1)', self.el).html()]                            }))                        };                            utils.MetaCheck.call(self, data.Meta) &&                            (self.model.set(data).sync() && $('.actions', self.el).addClass('hide'));                    });                                        $(self.el).off('click', '.btn.cancel').on('click', '.btn.cancel', function()                    {                        $('.actions', self.el).addClass('hide');                    });                    callback.call(self);                });            }        }	};	return providers;});